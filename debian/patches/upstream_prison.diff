commit 164235cf0d44deb1422be52e2a4919e46237d3ef
Author: Martin Gräßlin <mgraesslin@kde.org>
Date:   Mon Feb 2 17:02:35 2015 +0100

    [klipper] Adjust to new Prison API
    
    As Prison no longer provides a QWidget based API, we need to do the
    mapping to a QWidget ourself.
    
    Note: for the plasmoid I'm considering switching to a non-widget based
    solution.
    
    REVIEW: 122386

diff --git a/klipper/CMakeLists.txt b/klipper/CMakeLists.txt
index a08f062..05c8e90 100644
--- a/klipper/CMakeLists.txt
+++ b/klipper/CMakeLists.txt
@@ -18,17 +18,14 @@ set(libklipper_common_SRCS
     clipcommandprocess.cpp
 )
 
-find_package(Prison "1.2.0" QUIET CONFIG)
-set_package_properties(Prison PROPERTIES DESCRIPTION "Prison library"
+find_package(KF5Prison "1.2.0" QUIET CONFIG)
+set_package_properties(KF5Prison PROPERTIES DESCRIPTION "Prison library"
                        URL "http://projects.kde.org/prison"
                        TYPE OPTIONAL
                        PURPOSE "Needed to create mobile barcodes from clipboard data (no stable release currently)"
                       )
-if (PRISON_FOUND)
-    include_directories(${PRISON_INCLUDE_DIR})
-endif ()
 
-set(HAVE_PRISON ${PRISON_FOUND})
+set(HAVE_PRISON ${KF5Prison_FOUND})
 configure_file(config-klipper.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config-klipper.h )
 
 kde4_add_app_icon(libklipper_common_SRCS "${KDE4_ICON_INSTALL_DIR}/oxygen/*/apps/klipper.png")
@@ -58,8 +55,8 @@ target_link_libraries(kdeinit_klipper
 if (X11_FOUND)
   target_link_libraries(kdeinit_klipper XCB::XCB Qt5::X11Extras)
 endif()
-if (PRISON_FOUND)
-  target_link_libraries(kdeinit_klipper ${PRISON_LIBRARIES})
+if (HAVE_PRISON)
+  target_link_libraries(kdeinit_klipper KF5::Prison)
 endif ()
 
 install(TARGETS kdeinit_klipper ${INSTALL_TARGETS_DEFAULT_ARGS})
@@ -92,8 +89,8 @@ target_link_libraries(plasma_engine_clipboard
 if (X11_FOUND)
   target_link_libraries(plasma_engine_clipboard XCB::XCB Qt5::X11Extras)
 endif()
-if (PRISON_FOUND)
-  target_link_libraries(plasma_engine_clipboard ${PRISON_LIBRARIES})
+if (HAVE_PRISON)
+  target_link_libraries(plasma_engine_clipboard KF5::Prison)
 endif ()
 install(TARGETS plasma_engine_clipboard DESTINATION ${PLUGIN_INSTALL_DIR}/plasma/dataengine)
 install(FILES plasma-dataengine-clipboard.desktop DESTINATION ${SERVICES_INSTALL_DIR})
diff --git a/klipper/klipper.cpp b/klipper/klipper.cpp
index d49c165..6b6d610 100644
--- a/klipper/klipper.cpp
+++ b/klipper/klipper.cpp
@@ -48,7 +48,6 @@
 #include "klipperpopup.h"
 
 #ifdef HAVE_PRISON
-#include <prison/BarcodeWidget>
 #include <prison/DataMatrixBarcode>
 #include <prison/QRCodeBarcode>
 #endif
@@ -896,6 +895,25 @@ void Klipper::editData(const QSharedPointer< const HistoryItem > &item)
 }
 
 #ifdef HAVE_PRISON
+class BarcodeLabel : public QLabel
+{
+public:
+    BarcodeLabel(prison::AbstractBarcode *barcode, QWidget *parent = nullptr)
+        : QLabel(parent)
+        , m_barcode(barcode)
+        {
+            setSizePolicy(QSizePolicy::MinimumExpanding, QSizePolicy::MinimumExpanding);
+            setPixmap(QPixmap::fromImage(m_barcode->toImage(size())));
+        }
+protected:
+    void resizeEvent(QResizeEvent *event) override {
+        QLabel::resizeEvent(event);
+        setPixmap(QPixmap::fromImage(m_barcode->toImage(event->size())));
+    }
+private:
+    QScopedPointer<prison::AbstractBarcode> m_barcode;
+};
+
 void Klipper::showBarcode(const QSharedPointer< const HistoryItem > &item)
 {
     using namespace prison;
@@ -909,16 +927,16 @@ void Klipper::showBarcode(const QSharedPointer< const HistoryItem > &item)
     QWidget* mw = new QWidget(dlg);
     QHBoxLayout* layout = new QHBoxLayout(mw);
 
-    BarcodeWidget* qrcode = new BarcodeWidget(new QRCodeBarcode());
-    BarcodeWidget* datamatrix = new BarcodeWidget(new DataMatrixBarcode());
-
+    QRCodeBarcode *qrCode = new QRCodeBarcode;
+    DataMatrixBarcode *dataMatrix = new DataMatrixBarcode;
     if (item) {
-        qrcode->setData( item->text() );
-        datamatrix->setData( item->text() );
+        qrCode->setData(item->text());
+        dataMatrix->setData(item->text());
     }
-
-    layout->addWidget(qrcode);
-    layout->addWidget(datamatrix);
+    BarcodeLabel *qrCodeLabel = new BarcodeLabel(qrCode, mw);
+    BarcodeLabel *dataMatrixLabel = new BarcodeLabel(dataMatrix, mw);
+    layout->addWidget(qrCodeLabel);
+    layout->addWidget(dataMatrixLabel);
 
     mw->setFocus();
     QVBoxLayout *vBox = new QVBoxLayout(dlg);
